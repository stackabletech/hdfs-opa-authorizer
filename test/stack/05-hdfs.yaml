---
apiVersion: zookeeper.stackable.tech/v1alpha1
kind: ZookeeperCluster
metadata:
  name: simple-zk
spec:
  image:
    productVersion: 3.8.3
  servers:
    roleGroups:
      default:
        replicas: 1
---
apiVersion: zookeeper.stackable.tech/v1alpha1
kind: ZookeeperZnode
metadata:
  name: simple-hdfs-znode
spec:
  clusterRef:
    name: simple-zk
---
apiVersion: hdfs.stackable.tech/v1alpha1
kind: HdfsCluster
metadata:
  name: simple-hdfs
spec:
  image:
    productVersion: 3.3.6
    custom: hdfs
    pullPolicy: IfNotPresent
  clusterConfig:
    listenerClass: external-unstable
    dfsReplication: 1
    zookeeperConfigMapName: simple-hdfs-znode
    authentication:
      tlsSecretClass: tls
      kerberos:
        secretClass: kerberos-default
  nameNodes:
    roleGroups:
      default:
        config:
          resources:
            cpu:
              min: "500m"
              max: "4"
        envOverrides:
          HADOOP_CLASSPATH: "/stackable/hadoop/share/hadoop/tools/lib/*.jar"
          # TOPOLOGYLABEL1: "node:kubernetes.io/hostname"
        configOverrides: &configOverrides
          hdfs-site.xml:
            dfs.namenode.inode.attributes.provider.class: tech.stackable.HdfsOpaAuthorizer
          core-site.xml:
            hadoop.security.authorization: "true"
            hadoop.security.authorization.opa.policy.url: http://opa.default.svc.cluster.local:8081/v1/data/hdfs/allow
            hadoop.user.group.static.mapping.overrides: "dr.who=;nn=;nm=;jn=;testuser=supergroup;"
        replicas: 2
  dataNodes:
    roleGroups:
      default:
        configOverrides: *configOverrides
        replicas: 1
  journalNodes:
    roleGroups:
      default:
        configOverrides: *configOverrides
        replicas: 1
